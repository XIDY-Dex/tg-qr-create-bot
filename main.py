#rus - –∏–º–ø–æ—Ä—Ç –≤—Å–µ—Ö —Ä–µ—Å—É—Ä—Å–æ–≤. telebot —è–≤–ª—è–µ—Ç—Å—è —á–∞—Å—Ç—å—é –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ pyTelegramBotAPI, –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —ç—Ç—É –±–∏–±–ª–∏–æ—Ç–µ–∫—É —Å –ø–æ–º–æ—â—å—é pip
#eng - importing all resources. Object "telebot" is part of library "pyTelegramBotAPI", install this library from pip before use

import os
import telebot
import qrcode
import config

#rus - –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞ telebot. –ü–µ—Ä–≤—ã–º –∏–¥–µ—Ç —Ç–æ–∫–µ–Ω, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —É BotFather, –¥–∞–ª–µ–µ —É–∫–∞–∑–∞–Ω–∞ —Ä–∞–∑–º–µ—Ç–∫–∞ –ª—è —Ç–µ–∫—Å—Ç–∞ —Å –ø–æ–º–æ—â—å—é HTML
#eng - Initializing instance of class telebot. In arguments first is token from BotFather, second - marking all text using HTML
bot = telebot.TeleBot(config.token, parse_mode = config.parse)

#rus - –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
#eng - Handler for command '/start', that turning bot on
@bot.message_handler(commands = ['start'])
def welcome(message):
	bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, —è - <strong>–ë–æ—Ç - –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä QR-–∫–æ–¥–æ–≤</strong>. \n–ù–∞–ø–∏—à–∏ –º–Ω–µ –ª—é–±–æ–π —Ç–µ–∫—Å—Ç, –∞ –¥–∞–ª—å—à–µ —è –≤—Å–µ —Å–¥–µ–ª–∞—é —Å–∞–º üí™ üòâ.')

#rus - –∫–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â–∏. –ó–¥–µ—Å—å —É–∫–∞–∑–∞–Ω—ã –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ + –∫–æ–Ω—Ç–∞–∫—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ (–º–µ–Ω—è —Ç–æ –µ—Å—Ç—å)
#eng - Handler for command '/help', that gives some instructions + contacts of developer
@bot.message_handler(commands = ['help'])
def helper(message):
	bot.send_message(message.chat.id, '*–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–∞–ø–∏—à–∏—Ç–µ –ª—é–±–æ–π —Ç–µ–∫—Å—Ç, –∏ –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –µ–≥–æ –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç –≤ QR-–∫–æ–¥.\n*–ï—Å–ª–∏ —Å–ª—É—á–∞–π–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã - —Ç–æ –Ω–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Ç–µ—Å—å, –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Ö –æ—Ç–∫–ª–æ–Ω–∏—Ç.\n*–•–æ—Ç–∏—Ç–µ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤? –¢–æ–≥–¥–∞ –ø–∏—à–∏—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∏—á–∫—É:\n@alexkaravdev')

#rus - –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –µ–≥–æ –≤ –∫–æ–¥. –î–∞–±—ã –±–æ—Ç –Ω–µ –ø—É—Ç–∞–ª—Å—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –∫–∞–∂–¥–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è id —Ç–æ–≥–æ —á–∞—Ç–∞, –≤ –∫–æ—Ç–æ—Ä–æ–π –æ–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
#eng - Receiving and turning it into QR-Code. So that bot does not by mistake send user the wrong image, every image is getting name 'message.chat.id', that contains an id of a chat with user
@bot.message_handler(content_types = ['text'])
def create_code(message):
	bot.reply_to(message, '–¢–µ–∫—Å—Ç –ø—Ä–∏–Ω—è—Ç.\n–ù–∞—á–∏–Ω–∞—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∫–æ–¥–∞ üî®')
	data = message.text.encode('utf-8')
	filename = str(message.chat.id)
	img = qrcode.make(data)
	img.save(filename)
	photo = open(filename, 'rb')
	bot.send_message(message.chat.id, '–ì–æ—Ç–æ–≤–æ! –¢–≤–æ–π –∫–æ–¥ —Å–æ–±—Ä–∞–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—éüéâ')
	bot.send_photo(message.chat.id, photo)
	photo.close()
	os.remove(filename)
	bot.send_message(message.chat.id, '–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ! –ù–∞–¥–µ—é—Å—å –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—åüòä ')

#rus - –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
#eng - Bot Launch
bot.polling(none_stop = True)